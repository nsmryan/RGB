#include <rgb.h>


#if 1
prog_uint16_t prog_segments[NUM_FIBERS][PROG_SIZE] PROGMEM =
  {
    {DONE_OPCODE}
  , {0, OUTPUT_OPCODE, 0, FOR_OPCODE, 0, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, INCR_OPCODE,  1, WAIT_OPCODE, LOOP_OPCODE, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, DEC_OPCODE, 1, WAIT_OPCODE, LOOP_OPCODE, DROP_OPCODE, INCR_OPCODE, DUP_OPCODE, OUTPUT_OPCODE, EVER_OPCODE, DONE_OPCODE}
  , {5, WAIT_OPCODE, 0, OUTPUT_OPCODE, 0, FOR_OPCODE, 0, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, INCR_OPCODE,  1, WAIT_OPCODE, LOOP_OPCODE, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, DEC_OPCODE, 1, WAIT_OPCODE, LOOP_OPCODE, DROP_OPCODE, INCR_OPCODE, DUP_OPCODE, OUTPUT_OPCODE, EVER_OPCODE, DONE_OPCODE}
  , {10, WAIT_OPCODE, 0, OUTPUT_OPCODE, 0, FOR_OPCODE, 0, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, INCR_OPCODE,  1, WAIT_OPCODE, LOOP_OPCODE, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, DEC_OPCODE, 1, WAIT_OPCODE, LOOP_OPCODE, DROP_OPCODE, INCR_OPCODE, DUP_OPCODE, OUTPUT_OPCODE, EVER_OPCODE, DONE_OPCODE}
  , {15, WAIT_OPCODE, 0, OUTPUT_OPCODE, 0, FOR_OPCODE, 0, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, INCR_OPCODE,  1, WAIT_OPCODE, LOOP_OPCODE, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, DEC_OPCODE, 1, WAIT_OPCODE, LOOP_OPCODE, DROP_OPCODE, INCR_OPCODE, DUP_OPCODE, OUTPUT_OPCODE, EVER_OPCODE, DONE_OPCODE}
  , {20, WAIT_OPCODE, 0, OUTPUT_OPCODE, 0, FOR_OPCODE, 0, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, INCR_OPCODE,  1, WAIT_OPCODE, LOOP_OPCODE, DUTY_CYCLE_RESOLUTION, FOR_OPCODE, DUP_OPCODE, SET_PWM_OPCODE, DEC_OPCODE, 1, WAIT_OPCODE, LOOP_OPCODE, DROP_OPCODE, INCR_OPCODE, DUP_OPCODE, OUTPUT_OPCODE, EVER_OPCODE, DONE_OPCODE}
  };
#endif
#if 0
prog_uint16_t prog_segments[NUM_FIBERS][PROG_SIZE] PROGMEM =
  {
    {0, OUTPUT_OPCODE, DONE_OPCODE}
  , {20, OUTPUT_OPCODE, DONE_OPCODE}

  , {20, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}

  , {20, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}

  , {0, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}

  , {20, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}

  , {20, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}
  , {0, OUTPUT_OPCODE, DONE_OPCODE}
  };
#endif

prog_uint8_t fiberBitsUsed[NUM_FIBERS] PROGMEM = 
  {
     1
  ,  3
  ,  3

  ,  3
  ,  3
  ,  3
  };

prog_uint16_t fiberOffset[NUM_FIBERS] PROGMEM = 
  {
     (prog_uint16_t)&prog_segments[0][0]
  ,  (prog_uint16_t)&prog_segments[1][0]
  ,  (prog_uint16_t)&prog_segments[2][0]
  ,  (prog_uint16_t)&prog_segments[3][0]
  ,  (prog_uint16_t)&prog_segments[4][0]
  ,  (prog_uint16_t)&prog_segments[5][0]
  };

